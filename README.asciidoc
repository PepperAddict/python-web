= Project 1

Web Programming with Python and JavaScript

== Setting up

* [x] Python 3.6 or higher
* [x] Download Project 1
* [x] `pip3 install -r requirements.txt` 
* [x] set environment variable to run the app: `FLASK_APP=application.py FLASK_DEBUG=on flask run`, but there will be problems because `DATABASE_URL` env variable 
isn't set up yet.
* [x] set up an `.env` file with the environment variables such as `DATABASE_URL=postgreSQL URI info` while that is set up add `FLASK_APP=application.py` and `FLASK_DEBUG=on` in
there as well.
** In order for the `.env` file to work, will need to `pip install python-dotenv`. This was added to the `requirements.txt` file. Now that the env file is setup, all that 
needs to be done is run `flask run` from now on. 

== API

* [x] Sign up for the Goodreads API and save the key.
* [x] Add key information to the `.env` file. 

== Building the App 

* [x] User should be able to register for an account 
* [x] User should be able to login for an account 
* [x] User should be able to log out 
* [x] Import the CSV spreadsheet file
* [x] search functionality that searches for ISBN or title or author and it will give results. Should bring results even if not 
completely typed in.
* [ ] When logged in user  clicks on a book page from the search result, the new page should have more details about the book. The title, author, publication year, isbn number,
and reviews that users have left for the book on your website. 
* [ ] The user can submit a review and a rating of 1 - 5. The user cannot submit more than one review. 
* [x] The review data should have an average number of ratings from goodreads for that book. 
* [ ] If a user make a get request to your website's `/api/<isbn>` the website should return a json response containing:
**  book's title: *title*
**  book's author: *author*
**  publication date: *year*
**  isbn number: *isbn* 
** review count: *review_count*
** and average score: *average_score*
* [ ] If the isbn number doesn't exist in the database for the api, it should result to a 404 error page. 

== Database 

* [x] Create a users table using SQLAlchemy
* [x] Create books table using SQLAlchemy
* [ ] Create reviews table using SQLAlchemy
* [x] Import the csv rows to the books table 